#!/bin/bash
clear

# --
# run this script inside this directory:
# $./find-d

# --
# make sure settings in $proj/set-env-laptop are correct
source ../../set-env-laptop

# required: kill all directory opus .exe processes
# if any .exe related to dopus is running when this script is run,
# the lister will not correctly display the expected results
${PROJ}/bin/kproc dopusrt.exe >> /dev/null
${PROJ}/bin/kproc dopus.exe >> /dev/null

# ---
export FILE_COLLECTION_NAME=d-api
printf "\nFILE_COLLECTION_NAME=[${FILE_COLLECTION_NAME}]"

# ---
# https://www.tecmint.com/find-and-sort-files-modification-date-and-time-in-linux

# Three commands are run
# 1. GNU find.exe
# 2. dos2unix.exe on results file
# 3. dopusrt.exe to create a file collection from the find command

# ---
# 1. find files using cygwin GNU find.exe command (output to: file-collection.txt)
# 2. convert file-collection.txt to DOS file format: file-collection-dos.txt (dos2unix)
# 3. run command: `dopusrt.exe` to create a file collection
# 4. observe all commands work but file collection fails to create

# --- ------------------------------------------------------------------
SEARCH_DIR=/d
FIND_RESULTS=d-file-collection.txt
rm -f ${FIND_RESULTS}

# --- ------------------------------------------------------------------
# -- find.exe (GNU find)
# -- exclude directories:
# - /x/profiles/

find "${SEARCH_DIR}" -type f \( \
   -iname '*api*.txt' \
   -o -iname '*api*.md' \
   -o -iname '*api*.png' \
   -o -iname '*api*.jpg' \
   -o -iname '*api*.pdf' \
   \) -print0 | xargs -0 stat --format '%W :%w %n' | sort -nr | cut -d " " -f 5 | \
   grep -v profiles | tee ${FIND_RESULTS}

# --- ------------------------------------------------------------------
# ---
# 2) convert the ouput from the GNU find command to windows path (creating another file)
# this will be the input file to dopus
#IN_DOPUS_FILE=$(${PROJ}/bin/p2w "${FIND_RESULTS}")  # getting return value does not work, why?
IN_DOPUS_FILE=d-file-collection-dos.txt
rm -f ${IN_DOPUS_FILE}
${PROJ}/bin/p2w "${FIND_RESULTS}"

# --- ------------------------------------------------------------------
# ---
# 3) create dopus file collection
if [ -f ${IN_DOPUS_FILE} ]
then
   ${DOPUS_DIR}/dopusrt.exe /col delete "${FILE_COLLECTION_NAME}"
   printf "\nsuccess: deleted file collection [${FILE_COLLECTION_NAME}]\n"

   FILE_COLLECTION_NUM_ENTRIES=`wc -l ${IN_DOPUS_FILE}`
   printf "\nFound: ${FILE_COLLECTION_NUM_ENTRIES} entries\n"

   # read -p "Press [ENTER] to create file collection ${FILE_COLLECTION_NAME} from file ${IN_DOPUS_FILE}"
   ${PROJ}/bin/create-dopus-file-collection "${FILE_COLLECTION_NAME}" ${IN_DOPUS_FILE}
else
   printf "\nIN_DOPUS_FILE: [${IN_DOPUS_FILE}] does not exist\n"
fi

# --
# kill all dopus .exe processes for the next run (required due to some issue or bug)
#sleep 60
#${PROJ}/bin/kproc dopusrt.exe
#${PROJ}/bin/kproc dopus.exe